# ## Modified version of nginx/site-confs/default, for plain nginx image
# # Listens on 80 instead of redirecting to https
# # No proxy_cache
# # Adjusted root to /usr/share/nginx/html

# upstream client_app {
# 	server client:3000;
# }

# upstream server_app {
# 	server server:3001;
# }


# server {
#   listen 80;
#   server_name 0.0.0.0;

#   location / {
#       proxy_pass http://client_app;
#   }

#   location /sockjs-node {
#       proxy_pass http://client_app;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "Upgrade";
#   }
  
#   location /graphql {
#       rewrite /graphql/(.*) /$1 break;
#       proxy_pass http://server_app;
#   }
# }

## Modified version of nginx/site-confs/default, for plain nginx image
# Listens on 80 instead of redirecting to https
# No proxy_cache
# Adjusted root to /usr/share/nginx/html

# upstream node_app {
# 	server server:4002;
# }

upstream ng_app {
	server client:4001;
}

# redirect all traffic to https
server {
	listen 80;
	server_name _;
	return 301 https://$host$request_uri;
}

# main server block - expose only behind TLS termination or in development
server {
	listen 81;

	root /usr/share/nginx/html;
	index index.html index.htm;

	server_name \$hostname;

	client_max_body_size 0;

	# location /graphql {
	# 	# Regular app in cerebro/
	# 	proxy_pass http://node_app;
	# 	proxy_http_version 1.1;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header Host $http_host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	# Tell browser to differentiate JSON and HTML cache
	# 	add_header Vary "Accept";
	# 	# 0.0.0.0 and upgrading to allow webpack ws calls
	# 	add_header Content-Security-Policy "default-src 'self' 'unsafe-inline'; connect-src 'self' ws:; font-src 'self'; frame-src 'self'; img-src 'self' data:; object-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'";
	# 	# Following needed for NG dev view calls to ws://0.0.0.0/sockjs-node/450/t5ca1kjb/websocket
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	# proxy_set_header Connection "Upgrade";
	# 	proxy_read_timeout 3600;

	# }

	location /static { # static asset files (in project)
		# These are generally assets; cache 2 days
		expires 2d;
		add_header Cache-Control "public, no-transform";
	}

	location / { # static files (and in development, also Angular)
		proxy_pass http://ng_app;
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		# Following needed for NG dev view calls to ws://0.0.0.0/sockjs-node/450/t5ca1kjb/websocket
		add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' data:; connect-src 'self' https://api.stripe.com ws:; font-src 'self' https://fonts.gstatic.com; frame-src 'self' https://js.stripe.com https://hooks.stripe.com; object-src 'none'; script-src 'self' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com";
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		# root /usr/share/nginx/html/ng;
		
		# Cache control: cache for 2 days
		#location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		#	expires 2d;
		#	add_header Cache-Control "public, no-transform";
		#}
	}

}